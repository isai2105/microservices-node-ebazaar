services:
  kafka:
    image: apache/kafka:3.9.1
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      # Enable KRaft mode
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1

      # Internal cluster communication
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # Metadata quorum instead of Zookeeper
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      CLUSTER_ID: 'kraft-cluster-12345' # must be unique and stable

      # Logging
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka_data:/var/lib/kafka/data

  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: app
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
  user-service:
    image: myorg/user-service:1.0.0
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/app?schema=users
      - JWT_SECRET=devsecret
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_CLIENT_ID=user-service
    depends_on:
      - kafka
      - postgres
    ports:
      - '3001:3000'
  product-service:
    image: myorg/product-service:1.0.0
    build:
      context: .
      dockerfile: services/product-service/Dockerfile
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/app?schema=products
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_CLIENT_ID=product-service
    depends_on:
      - kafka
      - postgres
    ports:
      - '3002:3000'
  order-service:
    image: myorg/order-service:1.0.0
    build:
      context: .
      dockerfile: services/order-service/Dockerfile
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/app?schema=orders
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_CLIENT_ID=order-service
      - JWT_SECRET=devsecret
    depends_on:
      - kafka
      - postgres
    ports:
      - '3003:3000'
  payment-service:
    image: myorg/payment-service:1.0.0
    build:
      context: .
      dockerfile: services/payment-service/Dockerfile
    environment:
      - PORT=3000
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_CLIENT_ID=payment-service
    depends_on:
      - kafka
    ports:
      - '3004:3000'
  notification-service:
    image: myorg/notification-service:1.0.0
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    environment:
      - PORT=3000
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_CLIENT_ID=notification-service
    depends_on:
      - kafka
    ports:
      - '3005:3000'

volumes:
  kafka_data:
  postgres_data:
